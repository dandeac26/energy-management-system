{"ast":null,"code":"import _slicedToArray from \"/home/dan/FACULTA/DS-lab/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dan/FACULTA/DS-lab/react-demo/src/commons/tables/table.js\";\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport { Col, Row } from \"react-bootstrap\";\nimport Field from \"./fields/Field\";\n\nfunction Table(props) {\n  var _useState = useState(props.data),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(props.columns),\n      _useState4 = _slicedToArray(_useState3, 2),\n      columns = _useState4[0],\n      setColumns = _useState4[1];\n\n  var _useState5 = useState(props.search),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filters = _useState8[0],\n      setFilters = _useState8[1];\n\n  var _useState9 = useState(props.pageSize || 10),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pageSize = _useState10[0],\n      setPageSize = _useState10[1];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      updateState = _React$useState2[1];\n\n  var forceUpdate = React.useCallback(function () {\n    return updateState({});\n  }, []);\n\n  function filter(data) {\n    var accepted = true;\n    filters.forEach(function (val) {\n      if (String(val.value) === \"\") {\n        accepted = true;\n      }\n\n      if (!String(data[val.accessor]).includes(String(val.value)) && !String(val.value).includes(String(data[val.accessor]))) {\n        accepted = false;\n      }\n    });\n    return accepted;\n  }\n\n  function handleChange(value, index, header) {\n    if (filters === undefined) {\n      setFilters(function (filters) {\n        return [];\n      });\n    }\n\n    var keep = value.target.value;\n    setFilters(function (filters) {\n      var newFilters = JSON.parse(JSON.stringify(filters));\n      newFilters[index] = {\n        value: keep,\n        accessor: header\n      };\n      return newFilters;\n    });\n  }\n\n  function getTRPropsType(state, rowInfo) {\n    if (rowInfo) {\n      return {\n        style: {\n          textAlign: \"center\"\n        }\n      };\n    } else return {};\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, search.map(function (header, index) {\n    return React.createElement(Col, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: header.accessor,\n      label: header.accessor,\n      onChange: function onChange(e) {\n        return handleChange(e, index, header.accessor);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ReactTable, {\n    data: data ? data.filter(function (data) {\n      return filter(data);\n    }) : [],\n    resolveData: function resolveData(data) {\n      return data.map(function (row) {\n        return row;\n      });\n    },\n    columns: columns,\n    defaultPageSize: pageSize,\n    getTrProps: getTRPropsType,\n    showPagination: true,\n    style: {\n      height: '300px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/dan/FACULTA/DS-lab/react-demo/src/commons/tables/table.js"],"names":["React","useState","useEffect","useReducer","ReactTable","Col","Row","Field","Table","props","data","setData","columns","setColumns","search","setSearch","filters","setFilters","pageSize","setPageSize","updateState","forceUpdate","useCallback","filter","accepted","forEach","val","String","value","accessor","includes","handleChange","index","header","undefined","keep","target","newFilters","JSON","parse","stringify","getTRPropsType","state","rowInfo","style","textAlign","map","e","row","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\nimport { Col, Row } from \"react-bootstrap\";\n\nimport Field from \"./fields/Field\";\n\nfunction Table(props) {\n    const [data, setData] = useState(props.data);\n    const [columns, setColumns] = useState(props.columns);\n    const [search, setSearch] = useState(props.search);\n    const [filters, setFilters] = useState([]);\n    const [pageSize, setPageSize] = useState(props.pageSize || 10);\n\n    const [, updateState] = React.useState();\n    const forceUpdate = React.useCallback(() => updateState({}), []);\n\n    function filter(data) {\n        let accepted = true;\n\n        filters.forEach(val => {\n            if (String(val.value) === \"\") {\n                accepted = true;\n            }\n\n            if (!String(data[val.accessor]).includes(String(val.value)) && !String(val.value).includes(String(data[val.accessor]))) {\n                accepted = false;\n            }\n        });\n\n        return accepted;\n    }\n\n    function handleChange(value, index, header) {\n        if (filters === undefined) {\n            setFilters((filters) => ([]));\n        }\n        let keep = value.target.value;\n\n        setFilters((filters) => {\n            let newFilters = JSON.parse(JSON.stringify(filters));\n\n            newFilters[index] = {\n                value: keep,\n                accessor: header\n            };\n\n            return newFilters;\n        });\n\n    }\n\n    function getTRPropsType(state, rowInfo) {\n        if (rowInfo) {\n            return {\n                style: {\n                    textAlign: \"center\"\n                }\n            };\n        }\n        else\n            return {};\n    }\n\n    return (\n        <div>\n            <Row>\n                {\n                    search.map((header, index) => {\n                        return (\n                            <Col key={index}>\n                                <div >\n                                    <Field id={header.accessor} label={header.accessor}\n                                        onChange={(e) => handleChange(e, index, header.accessor)} />\n                                </div>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n            <Row>\n                <Col>\n                    <ReactTable\n                        data={data ? data.filter(data => filter(data)) : []}\n                        resolveData={data => data.map(row => row)}\n                        columns={columns}\n                        defaultPageSize={pageSize}\n                        getTrProps={getTRPropsType}\n                        showPagination={true}\n                        style={{\n                            height: '300px'\n                        }}\n                    />\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}