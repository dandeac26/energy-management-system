{"ast":null,"code":"function performRequest(request, callback) {\n  fetch(request).then(function (response) {\n    if (response.ok) {\n      response.json().then(function (json) {\n        return callback(json, response.status, null);\n      });\n    } else {\n      response.json().then(function (err) {\n        return callback(null, response.status, err);\n      });\n    }\n  }).catch(function (err) {\n    //catch any other unexpected error, and set custom code for error = 1\n    callback(null, 1, err);\n  });\n}\n\nmodule.exports = {\n  performRequest: performRequest\n};","map":{"version":3,"sources":["/home/dan/FACULTA/DS-lab/react-demo/src/commons/api/rest-client.js"],"names":["performRequest","request","callback","fetch","then","response","ok","json","status","err","catch","module","exports"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAiCC,QAAjC,EAA2C;AACvCC,EAAAA,KAAK,CAACF,OAAD,CAAL,CACKG,IADL,CAEQ,UAAUC,QAAV,EAAoB;AAChB,QAAIA,QAAQ,CAACC,EAAb,EAAiB;AACbD,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAG,IAAI;AAAA,eAAIL,QAAQ,CAACK,IAAD,EAAOF,QAAQ,CAACG,MAAhB,EAAwB,IAAxB,CAAZ;AAAA,OAAzB;AACH,KAFD,MAGK;AACDH,MAAAA,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqB,UAAAK,GAAG;AAAA,eAAIP,QAAQ,CAAC,IAAD,EAAOG,QAAQ,CAACG,MAAhB,EAAwBC,GAAxB,CAAZ;AAAA,OAAxB;AACH;AACJ,GATT,EAUKC,KAVL,CAUW,UAAUD,GAAV,EAAe;AAClB;AACAP,IAAAA,QAAQ,CAAC,IAAD,EAAO,CAAP,EAAUO,GAAV,CAAR;AACH,GAbL;AAcH;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACbZ,EAAAA,cAAc,EAAdA;AADa,CAAjB","sourcesContent":["function performRequest(request, callback) {\n    fetch(request)\n        .then(\n            function (response) {\n                if (response.ok) {\n                    response.json().then(json => callback(json, response.status, null));\n                }\n                else {\n                    response.json().then(err => callback(null, response.status, err));\n                }\n            })\n        .catch(function (err) {\n            //catch any other unexpected error, and set custom code for error = 1\n            callback(null, 1, err)\n        });\n}\n\nmodule.exports = {\n    performRequest\n};\n"]},"metadata":{},"sourceType":"module"}