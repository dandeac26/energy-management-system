{"ast":null,"code":"import _objectSpread from \"/home/dan/FACULTA/DS-lab/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/dan/FACULTA/DS-lab/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dan/FACULTA/DS-lab/react-demo/src/person/components/person-form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport Button from \"react-bootstrap/Button\";\nimport Validate from \"./validators/person-validators\";\nimport * as API_USERS from \"../api/person-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\nvar formControlsInit = {\n  name: {\n    value: '',\n    placeholder: 'What is your name?...',\n    valid: false,\n    touched: false,\n    validationRules: {\n      minLength: 3,\n      isRequired: true\n    }\n  },\n  email: {\n    value: '',\n    placeholder: 'Email...',\n    valid: false,\n    touched: false,\n    validationRules: {\n      emailValidator: true\n    }\n  },\n  age: {\n    value: '',\n    placeholder: 'Age...',\n    valid: false,\n    touched: false\n  },\n  address: {\n    value: '',\n    placeholder: 'Cluj, Zorilor, Str. Lalelelor 21...',\n    valid: false,\n    touched: false\n  }\n};\n\nfunction PersonForm(props) {\n  var _useState = useState({\n    status: 0,\n    errorMessage: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formIsValid = _useState4[0],\n      setFormIsValid = _useState4[1];\n\n  var _useState5 = useState(formControlsInit),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formControls = _useState6[0],\n      setFormControls = _useState6[1];\n\n  function handleChange(event) {\n    var name = event.target.name;\n    var value = event.target.value;\n\n    var updatedControls = _objectSpread({}, formControls);\n\n    var updatedFormElement = updatedControls[name];\n    updatedFormElement.value = value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = Validate(value, updatedFormElement.validationRules);\n    updatedControls[name] = updatedFormElement;\n    var formIsValid = true;\n\n    for (var updatedFormElementName in updatedControls) {\n      formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n    }\n\n    setFormControls(function (formControls) {\n      return updatedControls;\n    });\n    setFormIsValid(function (formIsValidPrev) {\n      return formIsValid;\n    });\n  }\n\n  function registerPerson(person) {\n    return API_USERS.postPerson(person, function (result, status, err) {\n      if (result !== null && (status === 200 || status === 201)) {\n        console.log(\"Successfully inserted person with id: \" + result);\n        props.reloadHandler();\n      } else {\n        setError(function (error) {\n          return {\n            status: status,\n            errorMessage: err\n          };\n        });\n      }\n    });\n  }\n\n  function handleSubmit() {\n    var person = {\n      name: formControls.name.value,\n      email: formControls.email.value,\n      age: formControls.age.value,\n      address: formControls.address.value\n    };\n    registerPerson(person);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    id: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"nameField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" Name: \"), React.createElement(Input, {\n    name: \"name\",\n    id: \"nameField\",\n    placeholder: formControls.name.placeholder,\n    onChange: handleChange,\n    defaultValue: formControls.name.value,\n    touched: formControls.name.touched ? 1 : 0,\n    valid: formControls.name.valid,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), formControls.name.touched && !formControls.name.valid && React.createElement(\"div\", {\n    className: \"error-message row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \" * Name must have at least 3 characters \")), React.createElement(FormGroup, {\n    id: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"emailField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \" Email: \"), React.createElement(Input, {\n    name: \"email\",\n    id: \"emailField\",\n    placeholder: formControls.email.placeholder,\n    onChange: handleChange,\n    defaultValue: formControls.email.value,\n    touched: formControls.email.touched ? 1 : 0,\n    valid: formControls.email.valid,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), formControls.email.touched && !formControls.email.valid && React.createElement(\"div\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \" * Email must have a valid format\")), React.createElement(FormGroup, {\n    id: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"addressField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" Address: \"), React.createElement(Input, {\n    name: \"address\",\n    id: \"addressField\",\n    placeholder: formControls.address.placeholder,\n    onChange: handleChange,\n    defaultValue: formControls.address.value,\n    touched: formControls.address.touched ? 1 : 0,\n    valid: formControls.address.valid,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    id: \"age\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"ageField\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \" Age: \"), React.createElement(Input, {\n    name: \"age\",\n    id: \"ageField\",\n    placeholder: formControls.age.placeholder,\n    min: 0,\n    max: 100,\n    type: \"number\",\n    onChange: handleChange,\n    defaultValue: formControls.age.value,\n    touched: formControls.age.touched ? 1 : 0,\n    valid: formControls.age.valid,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: {\n      size: '4',\n      offset: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formIsValid,\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"  Submit \"))), error.status > 0 && React.createElement(APIResponseErrorMessage, {\n    errorStatus: error.status,\n    error: error.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }));\n}\n\nexport default PersonForm;","map":{"version":3,"sources":["/home/dan/FACULTA/DS-lab/react-demo/src/person/components/person-form.js"],"names":["React","useState","useEffect","Col","Row","FormGroup","Input","Label","Button","Validate","API_USERS","APIResponseErrorMessage","formControlsInit","name","value","placeholder","valid","touched","validationRules","minLength","isRequired","email","emailValidator","age","address","PersonForm","props","status","errorMessage","error","setError","formIsValid","setFormIsValid","formControls","setFormControls","handleChange","event","target","updatedControls","updatedFormElement","updatedFormElementName","formIsValidPrev","registerPerson","person","postPerson","result","err","console","log","reloadHandler","handleSubmit","size","offset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport Button from \"react-bootstrap/Button\";\n\nimport Validate from \"./validators/person-validators\";\nimport * as API_USERS from \"../api/person-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\n\nconst formControlsInit = {\n    name: {\n        value: '',\n        placeholder: 'What is your name?...',\n        valid: false,\n        touched: false,\n        validationRules: {\n            minLength: 3,\n            isRequired: true\n        }\n    },\n    email: {\n        value: '',\n        placeholder: 'Email...',\n        valid: false,\n        touched: false,\n        validationRules: {\n            emailValidator: true\n        }\n    },\n    age: {\n        value: '',\n        placeholder: 'Age...',\n        valid: false,\n        touched: false,\n    },\n    address: {\n        value: '',\n        placeholder: 'Cluj, Zorilor, Str. Lalelelor 21...',\n        valid: false,\n        touched: false,\n    },\n};\n\nfunction PersonForm(props) {\n    const [error, setError] = useState({ status: 0, errorMessage: null });\n    const [formIsValid, setFormIsValid] = useState(false);\n    const [formControls, setFormControls] = useState(formControlsInit);\n\n    function handleChange(event) {\n        let name = event.target.name;\n        let value = event.target.value;\n\n        let updatedControls = { ...formControls };\n\n        let updatedFormElement = updatedControls[name];\n\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = Validate(value, updatedFormElement.validationRules);\n        updatedControls[name] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let updatedFormElementName in updatedControls) {\n            formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n        }\n\n        setFormControls((formControls) => (updatedControls));\n        setFormIsValid((formIsValidPrev) => (formIsValid));\n    }\n\n\n    function registerPerson(person) {\n        return API_USERS.postPerson(person, (result, status, err) => {\n            if (result !== null && (status === 200 || status === 201)) {\n                console.log(\"Successfully inserted person with id: \" + result);\n                props.reloadHandler();\n            } else {\n                setError((error) => ({ status: status, errorMessage: err }));\n            }\n        });\n    }\n\n    function handleSubmit() {\n        let person = {\n            name: formControls.name.value,\n            email: formControls.email.value,\n            age: formControls.age.value,\n            address: formControls.address.value\n        };\n        registerPerson(person);\n    }\n\n    return (\n        <div>\n            <FormGroup id='name'>\n                <Label for='nameField'> Name: </Label>\n                <Input name='name' id='nameField' placeholder={formControls.name.placeholder}\n                    onChange={handleChange}\n                    defaultValue={formControls.name.value}\n                    touched={formControls.name.touched ? 1 : 0}\n                    valid={formControls.name.valid}\n                    required\n                />\n                {formControls.name.touched && !formControls.name.valid &&\n                    <div className={\"error-message row\"}> * Name must have at least 3 characters </div>}\n            </FormGroup>\n\n            <FormGroup id='email'>\n                <Label for='emailField'> Email: </Label>\n                <Input name='email' id='emailField' placeholder={formControls.email.placeholder}\n                    onChange={handleChange}\n                    defaultValue={formControls.email.value}\n                    touched={formControls.email.touched ? 1 : 0}\n                    valid={formControls.email.valid}\n                    required\n                />\n                {formControls.email.touched && !formControls.email.valid &&\n                    <div className={\"error-message\"}> * Email must have a valid format</div>}\n            </FormGroup>\n\n            <FormGroup id='address'>\n                <Label for='addressField'> Address: </Label>\n                <Input name='address' id='addressField' placeholder={formControls.address.placeholder}\n                    onChange={handleChange}\n                    defaultValue={formControls.address.value}\n                    touched={formControls.address.touched ? 1 : 0}\n                    valid={formControls.address.valid}\n                    required\n                />\n            </FormGroup>\n\n            <FormGroup id='age'>\n                <Label for='ageField'> Age: </Label>\n                <Input name='age' id='ageField' placeholder={formControls.age.placeholder}\n                    min={0} max={100} type=\"number\"\n                    onChange={handleChange}\n                    defaultValue={formControls.age.value}\n                    touched={formControls.age.touched ? 1 : 0}\n                    valid={formControls.age.valid}\n                    required\n                />\n            </FormGroup>\n\n            <Row>\n                <Col sm={{ size: '4', offset: 8 }}>\n                    <Button type={\"submit\"} disabled={!formIsValid} onClick={handleSubmit}>  Submit </Button>\n                </Col>\n            </Row>\n\n            {\n                error.status > 0 &&\n                <APIResponseErrorMessage errorStatus={error.status} error={error.errorMessage} />\n            }\n        </div>\n    );\n}\n\nexport default PersonForm;\n"]},"metadata":{},"sourceType":"module"}