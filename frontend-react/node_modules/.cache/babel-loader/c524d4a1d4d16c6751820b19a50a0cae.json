{"ast":null,"code":"import _slicedToArray from \"/home/dan/FACULTA/DS-lab/Project/energy-management-system/frontend-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dan/FACULTA/DS-lab/Project/energy-management-system/frontend-react/src/commons/tables/fields/Field.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './styles/field-style.css';\n\nfunction Field(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      fieldClassName = _useState2[0],\n      setFieldClassName = _useState2[1];\n\n  var _useState3 = useState(props.locked && props.focused || false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      focused = _useState4[0],\n      setFocused = _useState4[1];\n\n  var _useState5 = useState(props.value || ''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      value = _useState6[0],\n      setValue = _useState6[1];\n\n  var _useState7 = useState(props.error || ''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useState9 = useState(props.label || ''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      label = _useState10[0],\n      setLabel = _useState10[1];\n\n  function onChange(event) {\n    var newVal = event.target.value;\n    setValue(function (value) {\n      return newVal;\n    });\n    setError(function (error) {\n      return '';\n    });\n    return props.onChange(event);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"field \".concat((props.locked ? focused : focused || value) && 'focused', \" \").concat(props.locked && !focused && 'locked'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: props.id,\n    type: \"text\",\n    value: value,\n    placeholder: label,\n    onChange: onChange,\n    onFocus: function onFocus() {\n      return !props.locked && setFocused(function (focused) {\n        return true;\n      });\n    },\n    onBlur: function onBlur() {\n      return !props.locked && setFocused(function (focused) {\n        return false;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: props.id,\n    className: error && 'error',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, error || label));\n}\n\nField.propTypes = {\n  id: PropTypes.string.isRequired,\n  locked: PropTypes.bool,\n  focused: PropTypes.bool,\n  value: PropTypes.string,\n  error: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func\n};\nField.defaultProps = {\n  locked: false,\n  focused: false,\n  value: '',\n  error: '',\n  label: ''\n};\nexport default Field;","map":{"version":3,"sources":["/home/dan/FACULTA/DS-lab/Project/energy-management-system/frontend-react/src/commons/tables/fields/Field.js"],"names":["React","useState","useEffect","PropTypes","Field","props","fieldClassName","setFieldClassName","locked","focused","setFocused","value","setValue","error","setError","label","setLabel","onChange","event","newVal","target","id","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles/field-style.css';\n\nfunction Field(props) {\n    const [fieldClassName, setFieldClassName] = useState({});\n    const [focused, setFocused] = useState((props.locked && props.focused) || false);\n    const [value, setValue] = useState(props.value || '');\n    const [error, setError] = useState(props.error || '');\n    const [label, setLabel] = useState(props.label || '');\n\n    function onChange(event) {\n        const newVal = event.target.value;\n        setValue((value) => (newVal));\n        setError((error) => (''));\n        return props.onChange(event);\n    }\n\n    return (\n        <div className={`field ${(props.locked ? focused : focused || value) && 'focused'} ${props.locked && !focused && 'locked'}`}>\n            <input\n                id={props.id}\n                type=\"text\"\n                value={value}\n                placeholder={label}\n                onChange={onChange}\n                onFocus={() => !props.locked && setFocused((focused) => (true))}\n                onBlur={() => !props.locked && setFocused((focused) => (false))}\n            />\n            <label htmlFor={props.id} className={error && 'error'}>\n                {error || label}\n            </label>\n        </div>\n    );\n}\n\nField.propTypes = {\n    id: PropTypes.string.isRequired,\n    locked: PropTypes.bool,\n    focused: PropTypes.bool,\n    value: PropTypes.string,\n    error: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nField.defaultProps = {\n    locked: false,\n    focused: false,\n    value: '',\n    error: '',\n    label: '',\n};\n\nexport default Field;\n"]},"metadata":{},"sourceType":"module"}